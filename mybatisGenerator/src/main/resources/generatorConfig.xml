<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<!--根节点  没有任何属性-->
<generatorConfiguration>

    <!-- 数据库驱动:选择你的本地硬盘上面的数据库驱动包-->
    <classPathEntry location="e:/mysql-connector-java-8.0.26.jar" />

    <!--至少有一个context元素  用于指定生成一组对象的环境，例如，指定要链接的数据库，要生成对象的类型和要处理的数据库中的表-->
   <!--元素的必选属性 id 用来约定一个context 元素-->
    <!--可选属性  defaultModelType  定义如何生成实力类
            选项可以有:
                    conditional:默认值 如果一个表的主键只有一个字段，那么不会为该字段生成单独的实体类，会将该字段合并到基本实体类中
                    flat:该模型为每一张表生成一个实体类，这个实体类包含表中的所有字段
                    hierarchical:如果表中有主键，那么该模型会产生一个单独的主键实体类，然后为所有其他的字段生成一个单独的实体类
         可选属性：targetRuntime：此属性用于指定生成代码的运行时环境
                                   MyBatis3：为默认值
                                   MyBatis3Simple
                                   Ibatis2Java2
                                   Ibatis2Java5
         可选属性 introspectedColumnImpl:该参数可以指定扩展 org.mybatis.generator.api.IntrospectedColumn该类的实现类

    -->
    <!--如果希望生成example查询有关的内容可以使用以下的配置
        <context id="DB2Tables" targetRuntime="MyBatis3" defaultModelType="flat"></context>
    -->
    <context id="DB2Tables"  targetRuntime="MyBatis3" defaultModelType="flat">

        <plugin type="com.rock.sys.plugins.MyLombokPlugin">
            <property name="defaultSerialVersionUID" value="true"/>
            <property name="supperClass" value="com.rock.sys.pojo.Test" />
            <property name="ignoreFields"
                      value="id,revision,createdBy,createdTime,updatedBy,updatedTime" />
        </plugin>
         <!--commentGenerator 该元素最多可配置一个 生成的代码中是否包含注释的信息   ，具体就是生成表或字段的备注信息-->
        <commentGenerator type="com.rock.sys.config.CommentGeneratorConfig">
        </commentGenerator>
<!--          <commentGenerator >
           <property name="suppressDate" value="true"/>
           &lt;!&ndash; 是否去除自动生成的注释 true：是 ： false:否 &ndash;&g&ndash;&gt;
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>-->
        <!--数据库链接URL，用户名、密码 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql://localhost/test" userId="root" password="123456">
        </jdbcConnection>
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <!-- 生成模型的包名和位置-->
        <javaModelGenerator targetPackage="com.rock.sys.pojo" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!-- 生成映射文件的包名和位置-->
        <sqlMapGenerator targetPackage="com.rock.sys.mapper.impl" targetProject="src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
        </sqlMapGenerator>
        <!-- 生成DAO的包名和位置-->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.rock.sys.mapper" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>
        <!-- 要生成的表 tableName是数据库中的表名或视图名 domainObjectName是实体类名-->
        <table tableName="test1" domainObjectName="Test" enableCountByExample="true" enableUpdateByExample="true"  enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">
        </table>
        <table tableName="test_child" domainObjectName="TestChild" enableCountByExample="true" enableUpdateByExample="true"  enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">
        </table>


    </context>
</generatorConfiguration>